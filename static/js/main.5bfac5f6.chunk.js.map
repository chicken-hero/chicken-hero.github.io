{"version":3,"sources":["common/header/Header.jsx","common/navbar/Navbar.jsx","actions/playlist.js","common/player/Player.jsx","features/index.js","pages/detailMusicItem/DetailMusicItem.jsx","pages/detail/DetailListMusic.jsx","pages/musicItem/MusicItem.jsx","pages/discover/Discover.jsx","pages/zingchart/ItemZingchart.jsx","pages/zingchart/Zingchart.jsx","pages/newMusic/ItemNewMusic.jsx","pages/newMusic/NewMusic.jsx","pages/search/SearchItem.jsx","pages/search/Search.jsx","pages/sign-in/SignIn.jsx","pages/user/User.jsx","routes/NavigationUrl.jsx","common/playlist/PlaylistItem.jsx","common/playlist/Playlist.jsx","app/App.js","actions/user.js","reportWebVitals.js","reducers/playlist.js","reducers/user.js","reducers/index.js","app/store.js","index.js"],"names":["Header","props","str","isSignedIn","useSelector","state","user","currentUser","useState","searchSong","setSearchSong","className","value","onKeyPress","e","charCode","document","getElementById","click","onChange","target","type","placeholder","id","onClick","event","preventDefault","to","toLowerCase","replace","src","photoURL","alt","Navbar","setPathnameActive","pathName","useLocation","pathname","useEffect","querySelectorAll","forEach","nav","classList","remove","querySelector","add","setActiveNav","style","display","addNewPlaylist","list","playload","setActiveSong","song","Player","currentSong","setCurrentSong","listSong","setListSong","isPlay","setIsPlay","isRepeat","setIsRepeat","isRandom","setIsRandom","isMuted","setIsMuted","currentTime","setCurrentTime","songDuration","setSongDuration","activeSong","playlist","playlistStatus","status","dispatch","useDispatch","audio","duration","togglePlay","progress","secondToMmss","second","Math","floor","mm","ss","handleNextSong","activeId","listLength","length","index","encodeId","actionSetActiveSong","localStorage","setItem","JSON","stringify","handleRandomSong","currentId","random","thumbnailM","title","artistsNames","prevState","handlePrevSong","pause","play","seekTime","defaultValue","step","min","max","onEnded","onTimeUpdate","progressPercent","parent","parentElement","muted","action","showPlaylist","some","unshift","actionAddNewPlaylist","addSongToPlaylist","push","DetailMusicItem","alert","defaultProp","DetailListMusic","api","url","setApi","window","location","listMusic","setListMusic","fetch","then","res","json","songs","catch","err","console","log","setPlaylist","zIndex","sortDescription","href","map","MusicItem","ConvertURL","Discover","listTopMusic","setListTopMusic","listWantToHearMusic","setListWantToHearMusic","listLikeMusic","setListLikeMusi","listNewMusic","setListNewMusic","ItemZingchart","position","rankStatus","Zingchart","listZingchart","setListZingchart","newList","data","newSong","thumbnail","artists_names","rank_status","rankNum","rank_num","ItemNewMusic","NewMusic","SearchItem","Search","slug","useParams","listSearchSong","setListSearchSong","thumb","name","artist","uiConfig","signInFlow","signInSuccessUrl","signInOptions","firebase","auth","GoogleAuthProvider","PROVIDER_ID","SignIn","textAlign","firebaseAuth","User","signOut","displayName","key","NavigationUrl","exact","from","path","PlaylistItem","handleRemoveSong","Playlist","setList","showClass","handleRemoveSongFromPlaylist","removeId","filter","removeIndex","findIndex","removeSongFromPlaylist","initializeApp","apiKey","process","authDomain","App","unregisterAuthObserver","onAuthStateChanged","a","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","playlistInitialState","parse","getItem","playlistReducer","userInitialState","userReducer","rootReducer","combineReducers","store","createStore","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.5bfac5f6.chunk.js","sourcesContent":["import React from 'react';\r\nimport './header.css';\r\nimport { useSelector } from 'react-redux';\r\nimport { useState } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nHeader.propTypes = {\r\n\r\n};\r\n\r\nfunction Header(props) {\r\n\r\n    const isSignedIn = useSelector(state => state.user.isSignedIn);\r\n    const currentUser = useSelector(state => state.user.currentUser);\r\n    const [searchSong, setSearchSong] = useState(\"\");\r\n\r\n    const handleSearchSongChange = (e) => {\r\n        setSearchSong(e.target.value);\r\n    }\r\n    const handleStop = (event) => {\r\n        if (!searchSong) {\r\n            event.preventDefault();\r\n        }\r\n    }\r\n    const pressEnter = (e) => {\r\n        if (e.charCode === 13) {\r\n            document.getElementById('btn-search').click();\r\n        }\r\n    }\r\n    const setPhoto = () => {\r\n        if(isSignedIn)\r\n            return <img className=\"img-fluid photo-url\" src={currentUser.photoURL} alt=\"\" />\r\n        return <i className=\"fa fa-user mt-2\" />\r\n    }\r\n\r\n    const ConvertURL = (str) => {\r\n        // Chuyển hết sang chữ thường\r\n        str = str.toLowerCase();\r\n\r\n        // xóa dấu\r\n        str = str.replace(/(à|á|ạ|ả|ã|â|ầ|ấ|ậ|ẩ|ẫ|ă|ằ|ắ|ặ|ẳ|ẵ)/g, 'a');\r\n        str = str.replace(/(è|é|ẹ|ẻ|ẽ|ê|ề|ế|ệ|ể|ễ)/g, 'e');\r\n        str = str.replace(/(ì|í|ị|ỉ|ĩ)/g, 'i');\r\n        str = str.replace(/(ò|ó|ọ|ỏ|õ|ô|ồ|ố|ộ|ổ|ỗ|ơ|ờ|ớ|ợ|ở|ỡ)/g, 'o');\r\n        str = str.replace(/(ù|ú|ụ|ủ|ũ|ư|ừ|ứ|ự|ử|ữ)/g, 'u');\r\n        str = str.replace(/(ỳ|ý|ỵ|ỷ|ỹ)/g, 'y');\r\n        str = str.replace(/(đ)/g, 'd');\r\n\r\n        // Xóa ký tự đặc biệt\r\n        str = str.replace(/([^0-9a-z-\\s])/g, '');\r\n\r\n        // Xóa khoảng trắng thay bằng ký tự -\r\n        str = str.replace(/(\\s+)/g, '-');\r\n\r\n        // xóa phần dự - ở đầu\r\n        str = str.replace(/^-+/g, '');\r\n\r\n        // xóa phần dư - ở cuối\r\n        str = str.replace(/-+$/g, '');\r\n\r\n        // return\r\n        return str;\r\n    }\r\n    \r\n    return (\r\n        <div className=\"header pt-3 col-10\">\r\n            <div className=\"header-left\">\r\n                <input value={searchSong} onKeyPress={pressEnter} onChange={handleSearchSongChange} type=\"text\" className=\"search-music ml-5\" placeholder=\"Nhập tên bài hát, Nghệ sĩ...\" />\r\n            </div>\r\n            <div className=\"header-right pl-3\">\r\n                <ul className=\"list-manage\">\r\n                    <li className=\"list-manage-item search-item mr-5\">\r\n                        <Link id=\"btn-search\" onClick={handleStop} to={`/tim-kiem/${ConvertURL(searchSong)}`}><i className=\"fa fa-search mt-2\" /></Link>\r\n                    </li>\r\n                    <li className=\"list-manage-item theme-item mr-5\">\r\n                        <i className=\"fa fa-tshirt mt-2\" />\r\n                    </li>\r\n                    <li className=\"list-manage-item setting-item mr-5\">\r\n                        <i className=\"fa fa-cog mt-2\" />\r\n                    </li>\r\n                    <Link to={(isSignedIn) ? \"/tai-khoan\" : \"/dang-nhap\"}>\r\n                        <li className=\"list-manage-item account-item\">\r\n                            {setPhoto()}\r\n                        </li>\r\n                    </Link>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport './navbar.css';\r\nimport { useEffect, useState } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector } from 'react-redux';\r\nimport {useLocation} from 'react-router';\r\n\r\nNavbar.propTypes = {\r\n    \r\n};\r\n\r\nfunction Navbar(props) {\r\n\r\n    const isSignedIn = useSelector(state => state.user.isSignedIn);\r\n    const [pathnameActive, setPathnameActive] = useState(\"\");\r\n\r\n    const pathName = useLocation().pathname;\r\n    \r\n    const ConvertURL = (str) => {\r\n        // Chuyển hết sang chữ thường\r\n        str = str.toLowerCase();\r\n        // Xóa ký tự đặc biệt\r\n        str = str.replace(/([/])/g, '');\r\n        // return\r\n        return str;\r\n    }\r\n    const handleClickNav = (e) => {\r\n        const listNav = document.querySelectorAll('.nav-item');\r\n        listNav.forEach(nav => {\r\n            nav.classList.remove('active');\r\n        })\r\n        e.target.parentElement.classList.add('active');\r\n    }\r\n    const setActiveNav = () => {\r\n        setPathnameActive(pathName);\r\n        const listNav = document.querySelectorAll('.nav-item');\r\n        listNav.forEach(nav => {\r\n            nav.classList.remove('active');\r\n        })\r\n        if(pathName === \"/tai-khoan\" || pathName === \"/discover\" || pathName === \"/zing-chart\" ||\r\n        pathName === \"/moi-phat-hanh\" || pathName === \"/tai-khoan\" || pathName === \"/tai-khoan\")\r\n            document.querySelector(`.nav-${ConvertURL(pathName)}`).classList.add('active');\r\n    }\r\n\r\n    useEffect(() => {\r\n        setActiveNav();\r\n    }, [pathName])\r\n\r\n    return (\r\n        <div className=\"col-2 nav-left col-left\">\r\n            <div className=\"nav-brand mt-3\">\r\n                <img className=\"img-fluid\" src=\"https://static-zmp3.zadn.vn/zmp3_rpt/images/logo-mp3.svg\" alt=\"\" />\r\n            </div>\r\n            <div className=\"zm-nav nav-top\">\r\n                <nav className=\"navbar navbar-expand-lg\">\r\n                    <ul style={{display: 'block'}} className=\"navbar-nav mr-auto\">\r\n                        <li className=\"nav-item nav-tai-khoan\">\r\n                            <Link className=\"nav-link\" to={(isSignedIn) ? \"/tai-khoan\" : \"/dang-nhap\"}><i className=\"fa fa-music\" /> Cá Nhân</Link>\r\n                        </li>\r\n                        <li className=\"nav-item nav-discover\">\r\n                            <Link className=\"nav-link\" to=\"/discover\"><i className=\"fa fa-compact-disc\" /> Khám Phá</Link>\r\n                        </li>\r\n                        <li className=\"nav-item nav-zing-chart\">\r\n                            <Link className=\"nav-link\" to=\"/zing-chart\"><i className=\"fa fa-chart-line\" /> #zingchart</Link>\r\n                        </li>\r\n                    </ul>\r\n                </nav>\r\n            </div>\r\n            <hr />\r\n            <div className=\"zm-nav nav-bot\">\r\n                <nav className=\"navbar navbar-expand-lg\">\r\n                    <ul style={{display: 'block'}} className=\"navbar-nav mr-auto\">\r\n                        <li className=\"nav-item nav-moi-phat-hanh\">\r\n                            <Link className=\"nav-link\" to=\"/moi-phat-hanh\"><i className=\"fa fa-headphones-alt\" /> Nhạc mới</Link>\r\n                        </li>\r\n                        <li className=\"nav-item \">\r\n                            <Link className=\"nav-link\" to=\"/\"><i className=\"fa fa-icons\" /> Thể Loại</Link>\r\n                        </li>\r\n                        <li className=\"nav-item \">\r\n                            <Link className=\"nav-link\" to=\"/\"><i className=\"fa fa-star\" /> Top 100</Link>\r\n                        </li>\r\n                    </ul>\r\n                </nav>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Navbar;","export const showPlaylist = (status) => {\r\n    return {\r\n        type: 'SHOW_PLAYLIST',\r\n        playload: status\r\n    }\r\n}\r\nexport const addNewPlaylist = (list) => {\r\n    return {\r\n        type: 'ADD_NEW_PLAYLIST',\r\n        playload: list\r\n    }\r\n}\r\nexport const addNewSong = (song) => {\r\n    return {\r\n        type: 'ADD_SONG_TO_PLAYLIST',\r\n        playload: song\r\n    }\r\n}\r\nexport const setActiveSong = (song) => {\r\n    return {\r\n        type: 'SET_ACTIVE_SONG',\r\n        playload: song\r\n    }\r\n}\r\nexport const removeSong = (song) => {\r\n    return {\r\n        type: 'REMOVE_SONG_FROM_PLAYLIST',\r\n        playload: song\r\n    }\r\n}","import React from 'react';\r\nimport './player.css';\r\nimport { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { showPlaylist } from '../../actions/playlist';\r\nimport { setActiveSong } from '../../actions/playlist';\r\n\r\nPlayer.propTypes = {\r\n\r\n};\r\n\r\nfunction Player(props) {\r\n    const [currentSong, setCurrentSong] = useState({});\r\n    const [listSong, setListSong] = useState([]);\r\n    const [isPlay, setIsPlay] = useState(false);\r\n    const [isRepeat, setIsRepeat] = useState(false);\r\n    const [isRandom, setIsRandom] = useState(false);\r\n    const [isMuted, setIsMuted] = useState(false);\r\n    const [currentTime, setCurrentTime] = useState(0);\r\n    const [songDuration, setSongDuration] = useState(0);\r\n\r\n    const activeSong = useSelector(state => state.playlist.activeSong);//get active song tu store\r\n    const playlistStatus = useSelector(state => state.playlist.status);//get trang thai cua playlist\r\n    const playlist = useSelector(state => state.playlist.list);//get trang thai cua playlist\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        setListSong(playlist);\r\n    }, [playlist])\r\n    //hien thi bai hat dang duoc phat\r\n    useEffect(() => {\r\n        setCurrentSong(activeSong);\r\n        setCurrentTime(0);\r\n\r\n        return () => {\r\n\r\n        }\r\n    }, [activeSong])\r\n    useEffect(() => {\r\n        const audio = document.getElementById('audio');\r\n        setSongDuration(audio.duration);\r\n    }, [activeSong])\r\n\r\n    //an hien playlist\r\n    const hiddenPlaylist = () => {\r\n        const status = !playlistStatus;\r\n\r\n        const action = showPlaylist(status);\r\n        dispatch(action);\r\n    }\r\n\r\n    //handle play/pause song\r\n    const audio = document.getElementById('audio');\r\n    const togglePlay = document.querySelector('.btn-toggle-play');\r\n    const handlePlayPauseSong = () => {\r\n        if (!isPlay) {\r\n            audio.play();\r\n            setIsPlay(true);\r\n            togglePlay.classList.add('playing');\r\n        }\r\n        else {\r\n            audio.pause();\r\n            setIsPlay(false);\r\n            togglePlay.classList.remove('playing');\r\n        }\r\n    }\r\n    //khi tien do bai hat thay doi\r\n    const progress = document.getElementById('progress');\r\n    const setProgress = () => {\r\n        if (isPlay) {\r\n            const progressPercent = Math.floor(audio.currentTime / audio.duration * 100);\r\n            progress.value = progressPercent;\r\n            setCurrentTime(Math.floor(audio.currentTime));\r\n        }\r\n        if (isPlay && currentTime === 0) {\r\n            // togglePlay.classList.add('playing');\r\n            audio.play()\r\n            progress.value = 0;\r\n        }\r\n        if (!isPlay && currentTime === 0) {\r\n            togglePlay.classList.remove('playing');\r\n            progress.value = 0;\r\n        }\r\n    }\r\n    //format mm:ss\r\n    const secondToMmss = (second) => {\r\n        second = Math.floor(second);\r\n        let mm = Math.floor(second / 60);\r\n        let ss = second - 60 * mm;\r\n\r\n        let mDisplay = (mm > 0) ? ((mm >= 10) ? `${mm}:` : `0${mm}:`) : \"00:\";\r\n        let sDisplay = (ss > 0) ? ((ss >= 10) ? `${ss}` : `0${ss}`) : \"00\";\r\n\r\n        return mDisplay + sDisplay;\r\n\r\n    }\r\n    //khi tua bai hat\r\n    const handleChangeDuration = (e) => {\r\n        const seekTime = audio.duration * e.target.value / 100;\r\n        audio.currentTime = seekTime;\r\n    }\r\n    //khi kich nut repeat \r\n    const clickRepeatSong = (e) => {\r\n        if (isRepeat) {\r\n            setIsRepeat(prevState => !prevState);\r\n            e.target.classList.remove('btn-active');\r\n        }\r\n        else {\r\n            setIsRepeat(prevState => !prevState);\r\n            e.target.classList.add('btn-active');\r\n        }\r\n    }\r\n    //khi kich nut random  \r\n    const clickRandomSong = (e) => {\r\n        if (isRandom) {\r\n            setIsRandom(prevState => !prevState);\r\n            e.target.classList.remove('btn-active');\r\n        }\r\n        else {\r\n            setIsRandom(prevState => !prevState);\r\n            e.target.classList.add('btn-active');\r\n        }\r\n    }\r\n    //khi next bai hat\r\n    const handleNextSong = () => {\r\n        let activeId = null;\r\n        let listLength = listSong.length;\r\n        listSong.forEach((song, index) => {\r\n            if (currentSong.encodeId === song.encodeId) {\r\n                if (index === listLength - 1)\r\n                    activeId = 0;\r\n                else\r\n                    activeId = index + 1;\r\n            }\r\n        })\r\n        const actionSetActiveSong = setActiveSong(listSong[activeId]);\r\n        localStorage.setItem('activeSongtMp3', JSON.stringify(listSong[activeId]));\r\n        dispatch(actionSetActiveSong);\r\n    }\r\n    //khi prev bai hat\r\n    const handlePrevSong = () => {\r\n        let activeId = null;\r\n        let listLength = listSong.length;\r\n        listSong.forEach((song, index) => {\r\n            if (currentSong.encodeId === song.encodeId) {\r\n                if (currentSong.encodeId === song.encodeId) {\r\n                    if (index === 0)\r\n                        activeId = listLength - 1;\r\n                    else\r\n                        activeId = index - 1;\r\n                }\r\n            }\r\n        })\r\n        const actionSetActiveSong = setActiveSong(listSong[activeId]);\r\n        localStorage.setItem('activeSongtMp3', JSON.stringify(listSong[activeId]));\r\n        dispatch(actionSetActiveSong);\r\n    }\r\n    //khi random bai hat\r\n    const handleRandomSong = () => {\r\n        let activeId = null;\r\n        let currentId = null;\r\n        let listLength = listSong.length;\r\n        listSong.forEach((song, index) => {\r\n            if (currentSong.encodeId === song.encodeId) {\r\n                currentId = index;\r\n            }\r\n        })\r\n        do {\r\n            activeId = Math.floor(Math.random() * listLength);\r\n        } while (activeId === currentId);\r\n        const actionSetActiveSong = setActiveSong(listSong[activeId]);\r\n        localStorage.setItem('activeSongtMp3', JSON.stringify(listSong[activeId]));\r\n        dispatch(actionSetActiveSong);\r\n    }\r\n    //khi kich nut next song\r\n    const clickNextSong = () => {\r\n        if (!isRandom) {\r\n            handleNextSong();\r\n        }\r\n        else {\r\n            handleRandomSong();\r\n        }\r\n    }\r\n    //khi kich nut prev song\r\n    const clickPrevSong = () => {\r\n        if (!isRandom) {\r\n            handlePrevSong();\r\n        }\r\n        else {\r\n            handleRandomSong();\r\n        }\r\n    }\r\n    //khi ket thuc bai hat\r\n    const handleEndSong = () => {\r\n        if (isRepeat) {\r\n            audio.play();\r\n        }\r\n        else {\r\n            if (!isRandom) {\r\n                handleNextSong();\r\n            }\r\n            else {\r\n                handleRandomSong();\r\n            }\r\n        }\r\n    }\r\n    //khi muted\r\n    const handleMuted = (e) => {\r\n        var target = e.target;\r\n        var parent = target.parentElement;\r\n        if (!isMuted) {\r\n            audio.muted = true;\r\n            setIsMuted(true);\r\n            parent.classList.add('muted');\r\n        }\r\n        else {\r\n            audio.muted = false;\r\n            setIsMuted(false);\r\n            parent.classList.remove('muted');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"container-fluid dashboard\">\r\n            <div className=\"row\">\r\n                <div className=\"col-3 dashboard-left\">\r\n                    <div className=\"cd-thumbnail\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-4\">\r\n                                <img className=\"mt-1 ml-3\" src={currentSong.thumbnailM} alt=\"\" />\r\n                            </div>\r\n                            <div className=\"col-8 info-song pt-3 pl-2\">\r\n                                <span className=\"title\">{currentSong.title}</span>\r\n                                <br />\r\n                                <span className=\"artist-name\">{currentSong.artistsNames}</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-6 player\">\r\n                    <div className=\"control\">\r\n                        <div onClick={clickRepeatSong} className=\"btn btn-repeat\">\r\n                            <i className=\"fas fa-redo\" />\r\n                        </div>\r\n                        <div onClick={clickPrevSong} className=\"btn btn-prev\">\r\n                            <i className=\"fas fa-step-backward\" />\r\n                        </div>\r\n                        <div onClick={handlePlayPauseSong} className=\"btn btn-toggle-play\">\r\n                            <i className=\"fas fa-pause icon-pause\" />\r\n                            <i className=\"fas fa-play icon-play\" />\r\n                        </div>\r\n                        <div onClick={clickNextSong} className=\"btn btn-next\">\r\n                            <i className=\"fas fa-step-forward\" />\r\n                        </div>\r\n                        <div onClick={clickRandomSong} className=\"btn btn-random\">\r\n                            <i className=\"fas fa-random\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"audio-duration\">\r\n                        <span className=\"current-time pr-2\">{secondToMmss(currentTime)}</span>\r\n                        <input onChange={handleChangeDuration} id=\"progress\" className=\"progress\" type=\"range\" defaultValue={0} step={1} min={0} max={100} />\r\n                        <span className=\"audio-time pl-2\">{secondToMmss(songDuration)}</span>\r\n                    </div>\r\n                    <audio onEnded={handleEndSong} onTimeUpdate={setProgress} id=\"audio\" src={`http://api.mp3.zing.vn/api/streaming/audio/${currentSong.encodeId}/320`} />\r\n                </div>\r\n                <div className=\"col-3 player-setting\">\r\n                    <div className=\"volume-setting\">\r\n                        <div onClick={handleMuted} className=\"btn btn-volume\">\r\n                            <i className=\"fa fa-volume-up\" />\r\n                            <i className=\"fa fa-volume-mute\" />\r\n                        </div>\r\n                        <input id=\"progress\" className=\"progress-volume\" type=\"range\" defaultValue={100} step={1} min={0} max={100} />\r\n                    </div>\r\n                    <div onClick={hiddenPlaylist} className=\"hidden-playlist mt-2\">\r\n                        <i className=\"fa fa-music pl-1\"></i>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Player;","import { addNewPlaylist, setActiveSong } from '../actions/playlist';\r\nimport 'firebase/compat/auth';\r\n\r\n//set playlist, day len store, luu vao local storage\r\nexport const setPlaylist = (listSong, dispatch) => {\r\n    const actionAddNewPlaylist = addNewPlaylist(listSong);\r\n    localStorage.setItem('playlistMp3',JSON.stringify(listSong));\r\n\r\n    //set bai hat duoc phat, day len store, luu vao local storage\r\n    let activeId = Math.floor(Math.random(1) * listSong.length);\r\n    const actionSetActiveSong = setActiveSong(listSong[activeId]);\r\n    localStorage.setItem('activeSongtMp3',JSON.stringify(listSong[activeId]));\r\n\r\n    dispatch(actionAddNewPlaylist);\r\n    dispatch(actionSetActiveSong);\r\n}\r\n\r\nexport const setApi = (url) => {\r\n    switch (url) {\r\n        case \"/pop-ballad-viet-noi-bat\":\r\n            return \"https://mp3-music-sever.herokuapp.com/api/listPopBalladMusic\"\r\n        case \"/chill-cung-rap-viet\":\r\n            return \"https://mp3-music-sever.herokuapp.com/api/listChillWithRapVietMusic\"\r\n        case \"/v-pop-hits-quoc-dan\":\r\n            return \"https://mp3-music-sever.herokuapp.com/api/listHitVpopMusic\"\r\n        case \"/guitar-v-pop\":\r\n            return \"https://mp3-music-sever.herokuapp.com/api/listGuitarVpopMusic\"\r\n        case \"/rap-viet-ngay-nay\":\r\n            return \"https://mp3-music-sever.herokuapp.com/api/listCurentRapMusic\"\r\n        case \"/combo-hits\":\r\n            return \"https://mp3-music-sever.herokuapp.com/api/listComboHitsMusic\"\r\n        case \"/bedroom-pop\":\r\n            return \"https://mp3-music-sever.herokuapp.com/api/listBedroomPopMusic\"\r\n        case \"/edm-now\":\r\n            return \"https://mp3-music-sever.herokuapp.com/api/listEdmNowMusic\"\r\n        case \"/top-100-nhac-v-pop-hay-nhat\":\r\n            return \"https://mp3-music-sever.herokuapp.com/api/listTopVpopMusic\"\r\n        case \"/top-100-bai-hat-nhac-tre-hay-nhat\":\r\n            return \"https://mp3-music-sever.herokuapp.com/api/listTopYoungMusic\"\r\n        case \"/top-100-pop-au-my-hay-nhat\":\r\n            return \"https://mp3-music-sever.herokuapp.com/api/listTopUsUkMusic\"\r\n        case \"/top-100-nhac-electronicdance-au-my-hay-nhat\":\r\n            return \"https://mp3-music-sever.herokuapp.com/api/listTopEdmMusic\"\r\n        case \"/top-100-nhac-han-quoc-hay-nhat\":\r\n            return \"https://mp3-music-sever.herokuapp.com/api/listTopKpopMusic\"\r\n        case \"/v-pop-thang-112021\":\r\n            return \"https://mp3-music-sever.herokuapp.com/api/listNewVpopMusic\"\r\n        case \"/us-uk-thang-112021\":\r\n            return \"https://mp3-music-sever.herokuapp.com/api/listNewUsUkMusic\"\r\n        case \"/k-pop-thang-112021\":\r\n            return \"https://mp3-music-sever.herokuapp.com/api/listNewKpopMusic\"\r\n        case \"/indie-viet-thang-112021\":\r\n            return \"https://mp3-music-sever.herokuapp.com/api/listNewVindieMusic\"\r\n        default:\r\n            return \"\";\r\n    }\r\n}\r\n\r\n//set bai hat duoc phat, day len store, luu vao local storage\r\nexport const setCurrentSong = (props, playlist, setActiveSong, dispatch) => {\r\n    let currentSong = {\r\n        title: props.title,\r\n        encodeId: props.encodeId,\r\n        thumbnailM: props.thumbnailM,\r\n        artistsNames: props.artistsNames\r\n    }\r\n    \r\n    //add bai hat vao playlist\r\n    if(!playlist.some(song => song.encodeId === currentSong.encodeId)){\r\n        playlist.unshift(currentSong);\r\n        const actionAddNewPlaylist = addNewPlaylist(playlist);\r\n        localStorage.setItem('playlistMp3',JSON.stringify(playlist));\r\n        dispatch(actionAddNewPlaylist);\r\n    }\r\n\r\n    const actionSetActiveSong = setActiveSong(currentSong);\r\n    localStorage.setItem('activeSongtMp3',JSON.stringify(currentSong));\r\n    dispatch(actionSetActiveSong);\r\n}\r\n\r\n//add bai hat vao playlist\r\nexport const addSongToPlaylist = (props, playlist, dispatch) => {\r\n    if(!playlist.some(song => song.encodeId === props.encodeId)){\r\n        playlist.push(props);\r\n        const actionAddNewPlaylist = addNewPlaylist(playlist);\r\n        localStorage.setItem('playlistMp3',JSON.stringify(playlist));\r\n        dispatch(actionAddNewPlaylist);\r\n    }\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setActiveSong } from '../../actions/playlist';\r\nimport {setCurrentSong} from '../../features/index.js';\r\nimport {addSongToPlaylist} from '../../features/index.js';\r\n\r\nDetailMusicItem.propTypes = {\r\n    title: PropTypes.string,\r\n    thumbnailM: PropTypes.string,\r\n    artistsNames: PropTypes.string\r\n};\r\nDetailMusicItem.defaultProp = {\r\n    title: '',\r\n    encodeId: '',\r\n    thumbnailM: '',\r\n    artistsNames: ''\r\n};\r\n\r\nfunction DetailMusicItem(props) {\r\n    \r\n    const dispatch = useDispatch();\r\n    const playlist = useSelector(state => state.playlist.list);\r\n    const isSignedIn = useSelector(state => state.user.isSignedIn);\r\n\r\n    const downloadSong = () => {\r\n        if(!isSignedIn)\r\n            alert(\"Đăng nhập để tải nhạc\");\r\n        else\r\n        alert(\"Không tải được đâu nghe online đê\");\r\n    }\r\n\r\n    return (\r\n        <tr>\r\n            <td onClick={() => setCurrentSong(props, playlist, setActiveSong, dispatch)} className=\"row\">\r\n                <div className=\"song-thumbnail col-2\">\r\n                    <i className=\"fa fa-music mt-3 mr-1\" />\r\n                    <img className=\"mt-1\" src={props.thumbnailM} alt=\"\" />\r\n                </div>\r\n                <div className=\"song-info col-8 ml-1 mb-2\">\r\n                    <span className=\"song-title\">{props.title}</span>\r\n                    <br />\r\n                    <span className=\"song-artist\">{props.artistsNames}</span>\r\n                </div>\r\n            </td>\r\n            <td onClick={() => setCurrentSong(props, playlist, setActiveSong, dispatch)} className=\"text-center\"><span>4:00</span></td>\r\n            <td className=\"setting\">\r\n                <span className=\"float-right btn-group\">\r\n                    <i className=\"fa fa-ellipsis-h\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"/>\r\n                    <div className=\"dropdown-menu dropdown-menu-right\">\r\n                        <i className=\"fa fa-arrow-down dropdown-item\" onClick={downloadSong}> Tải xuống</i>\r\n                        <i onClick={() => addSongToPlaylist(props, playlist, dispatch)} className=\"fa fa-plus dropdown-item\"> Thêm vào playlist</i>\r\n                    </div>\r\n                </span>\r\n            </td>\r\n        </tr>\r\n    );\r\n}\r\n\r\nexport default DetailMusicItem;","import React from 'react';\r\nimport '../../style/detail.css';\r\nimport { useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport DetailMusicItem from '../detailMusicItem/DetailMusicItem';\r\nimport { setApi, setPlaylist } from '../../features';\r\n\r\nDetailListMusic.propTypes = {\r\n\r\n};\r\n\r\nfunction DetailListMusic(props) {\r\n    const url =  window.location.pathname;\r\n    const api = setApi(url);\r\n\r\n    const [listMusic, setListMusic] = useState({});\r\n    const [listSong, setListSong] = useState([]);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        // get list music va list song\r\n        fetch(api)\r\n            .then((res) => {\r\n                return res.json();\r\n            })\r\n            .then((listMusic) => {\r\n                setListMusic(listMusic);\r\n                setListSong(listMusic.songs);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n    },[])\r\n\r\n    return (\r\n        <div className=\"container-fluid mt-5\">\r\n            <div className=\"row\">\r\n                <div className=\"info-list-music col-4 pr-5\">\r\n                    <div className=\"thumbnail-top\">\r\n                        <img src={listMusic.thumbnailM} alt=\"\" />\r\n                    </div>\r\n                    <div className=\"title\">\r\n                        <p>{listMusic.title}</p>\r\n                    </div>\r\n                    <div onClick={() => setPlaylist(listSong, dispatch)} className=\"btn btn-play\">\r\n                        <div className=\"btn btn-danger\"><i className=\"fa fa-play\" /> PHÁT NGẪU NHIÊN</div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-4\" style={{zIndex:-1}}></div>\r\n                <div className=\"detail-list-music col-8 float-right\">\r\n                    <div className=\"list-description\">\r\n                        <p>{listMusic.sortDescription}</p>\r\n                    </div>\r\n                    <div className=\"list-song\">\r\n                        <table className=\"table table-hover\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th className=\"col-6\">BÀI HÁT</th>\r\n                                    <th className=\"col-3 text-center\">THỜI GIAN</th>\r\n                                    <th className=\"col-3\">\r\n                                        <div className=\"btn-group float-right\">\r\n                                            <button type=\"button\" className=\"btn btn-sm btn-danger dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                                MẶC ĐỊNH\r\n                                            </button>\r\n                                            <div className=\"dropdown-menu dropdown-menu-right\">\r\n                                                <a className=\"dropdown-item\" href=\"/\">Mặc định</a>\r\n                                                <a className=\"dropdown-item\" href=\"/\">Tên bài hát(A-Z)</a>\r\n                                                <a className=\"dropdown-item\" href=\"/\">Tên ca sĩ(A-Z)</a>\r\n                                            </div>\r\n                                        </div>\r\n                                    </th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {listSong.map((song) => {\r\n                                    return (\r\n                                        <DetailMusicItem\r\n                                            key={song.encodeId}\r\n                                            encodeId={song.encodeId}\r\n                                            thumbnailM={song.thumbnailM}\r\n                                            title={song.title}\r\n                                            artistsNames={song.artistsNames}\r\n                                        />\r\n                                    )\r\n                                })}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DetailListMusic;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\n\r\nMusicItem.propTypes = {\r\n    title: PropTypes.string,\r\n    thumbNailM: PropTypes.string\r\n};\r\nMusicItem.defaultProp = {\r\n    title: ''\r\n}\r\n\r\nfunction MusicItem(props) {\r\n\r\n    const ConvertURL = (str) => {\r\n        // Chuyển hết sang chữ thường\r\n        str = str.toLowerCase();\r\n\r\n        // xóa dấu\r\n        str = str.replace(/(à|á|ạ|ả|ã|â|ầ|ấ|ậ|ẩ|ẫ|ă|ằ|ắ|ặ|ẳ|ẵ)/g, 'a');\r\n        str = str.replace(/(è|é|ẹ|ẻ|ẽ|ê|ề|ế|ệ|ể|ễ)/g, 'e');\r\n        str = str.replace(/(ì|í|ị|ỉ|ĩ)/g, 'i');\r\n        str = str.replace(/(ò|ó|ọ|ỏ|õ|ô|ồ|ố|ộ|ổ|ỗ|ơ|ờ|ớ|ợ|ở|ỡ)/g, 'o');\r\n        str = str.replace(/(ù|ú|ụ|ủ|ũ|ư|ừ|ứ|ự|ử|ữ)/g, 'u');\r\n        str = str.replace(/(ỳ|ý|ỵ|ỷ|ỹ)/g, 'y');\r\n        str = str.replace(/(đ)/g, 'd');\r\n\r\n        // Xóa ký tự đặc biệt\r\n        str = str.replace(/([^0-9a-z-\\s])/g, '');\r\n\r\n        // Xóa khoảng trắng thay bằng ký tự -\r\n        str = str.replace(/(\\s+)/g, '-');\r\n\r\n        // xóa phần dự - ở đầu\r\n        str = str.replace(/^-+/g, '');\r\n\r\n        // xóa phần dư - ở cuối\r\n        str = str.replace(/-+$/g, '');\r\n\r\n        // return\r\n        return str;\r\n    }\r\n\r\n    return (\r\n        <div className=\"card list-music-item col-3\">\r\n            <div className=\"thumbnail\">\r\n                <Link to={ConvertURL(props.title)}>\r\n                    <img className=\"card-img-top\" src={props.thumbnailM} alt=\"/\" />\r\n                </Link>\r\n\r\n            </div>\r\n            <div className=\"card-body\">\r\n                <div className=\"list-info\">\r\n                    <Link to={ConvertURL(props.title)}>\r\n                        <span className=\"list-title\">{props.title}</span>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default MusicItem;","import React from 'react';\r\nimport './discover.css';\r\nimport MusicItem from '../musicItem/MusicItem';\r\nimport { useEffect, useState } from 'react';\r\n\r\nconst apiVpopRising = \"https://mp3-music-sever.herokuapp.com/api/listMusic\";\r\n\r\nDiscover.propTypes = {\r\n    \r\n};\r\n\r\nfunction Discover(props) {\r\n    const [listTopMusic, setListTopMusic] = useState([])\r\n    const [listWantToHearMusic, setListWantToHearMusic] = useState([])\r\n    const [listLikeMusic, setListLikeMusi] = useState([])\r\n    const [listNewMusic, setListNewMusic] = useState([])\r\n\r\n    const getlistMusic = () => {\r\n        fetch(apiVpopRising)\r\n            .then((res) => {\r\n                return res.json();\r\n            })\r\n            .then((listMusic) => {\r\n                setListTopMusic(listMusic.listTopMusic);\r\n                setListWantToHearMusic(listMusic.listWantToHearMusic);\r\n                setListLikeMusi(listMusic.listLikeMusic);\r\n                setListNewMusic(listMusic.listNewMusic);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n    }\r\n    useEffect(() => {\r\n        getlistMusic();\r\n    }, [])\r\n    return (\r\n        <div className=\"content discover-page\">\r\n            <div className=\"recent-music container\">\r\n                <h4 className=\"list-title pb-2\">Có Thể Bạn Muốn Nghe <i className=\"fa fa-chevron-right\"></i></h4>\r\n                <div className=\"list-recent-music mb-3 row\">\r\n                    {\r\n                        listWantToHearMusic.map((list) => {\r\n                            return <MusicItem\r\n                                key={list.id}\r\n                                title={list.title}\r\n                                thumbnailM={list.thumbnailM}\r\n                            />\r\n                        })\r\n                    }\r\n                </div>\r\n                <h4 className=\"list-title pb-2\">Càng Nghe Càng Mê <i className=\"fa fa-chevron-right\"></i></h4>\r\n                <div className=\"list-recent-music mb-3 row\">\r\n                    {\r\n                        listLikeMusic.map((list) => {\r\n                            return <MusicItem\r\n                                key={list.id}\r\n                                title={list.title}\r\n                                thumbnailM={list.thumbnailM}\r\n                            />\r\n                        })\r\n                    }\r\n                </div>\r\n                <h4 className=\"list-title pb-2\">Top 100 <i className=\"fa fa-chevron-right\"></i></h4>\r\n                <div className=\"list-recent-music mb-3 row\">\r\n                    {\r\n                        listTopMusic.map((list) => {\r\n                            return <MusicItem\r\n                                key={list.id}\r\n                                title={list.title}\r\n                                thumbnailM={list.thumbnailM}\r\n                            />\r\n                        })\r\n                    }\r\n                </div>\r\n                <h4 className=\"list-title pb-2\">Nhạc Mới Mỗi Ngày <i className=\"fa fa-chevron-right\"></i></h4>\r\n                <div className=\"list-recent-music mb-3 row\">\r\n                    {\r\n                        listNewMusic.map((list) => {\r\n                            return <MusicItem\r\n                                key={list.id}\r\n                                title={list.title}\r\n                                thumbnailM={list.thumbnailM}\r\n                            />\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Discover;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setActiveSong } from '../../actions/playlist';\r\nimport { addSongToPlaylist, setCurrentSong } from '../../features/index.js';\r\n\r\nItemZingchart.propTypes = {\r\n    title: PropTypes.string,\r\n    encodeId: PropTypes.string,\r\n    thumbnailM: PropTypes.string,\r\n    artistsNames: PropTypes.string,\r\n    position: PropTypes.number,\r\n    rankStatus: PropTypes.string,\r\n    rankNum: PropTypes.string\r\n};\r\n\r\nfunction ItemZingchart(props) {\r\n\r\n    const isSignedIn = useSelector(state => state.user.isSignedIn);\r\n    const dispatch = useDispatch();\r\n    const playlist = useSelector(state => state.playlist.list);\r\n    const setDisplayRankStatus = () => {\r\n        if(props.rankStatus === \"stand\")    \r\n            return <span className=\"sort stand\">-</span>\r\n        else if(props.rankStatus === \"up\")\r\n            return (\r\n                <div className=\"sort up\">\r\n                    <i className=\"fa fa-sort-up\"></i>\r\n                </div>\r\n            )\r\n        else \r\n            return <span className=\"sort down\"><i className=\"fa fa-sort-down\"></i></span>\r\n    }\r\n    const downloadSong = () => {\r\n        if(!isSignedIn)\r\n            alert(\"Đăng nhập để tải nhạc\");\r\n        else\r\n        alert(\"Không tải được đâu nghe online đê\");\r\n    }\r\n\r\n    return (\r\n        <tr className=\"row\">\r\n            <td onClick={() => setCurrentSong(props, playlist, setActiveSong, dispatch)} className=\"col-6 row song-item-zingchart\">\r\n                <div className=\"song-thumbnail col-4\">\r\n                    <span className=\"song-number one\">{props.position}</span>\r\n                    {setDisplayRankStatus()}\r\n                    <img className=\"mt-1\" src={props.thumbnailM} alt=\"\" />\r\n                </div>\r\n                <div className=\"song-info col-8 mb-2\">\r\n                    <span className=\"song-title\">{props.title}</span>\r\n                    <br />\r\n                    <span className=\"song-artist\">{props.artistsNames}</span>\r\n                </div>\r\n            </td>\r\n            <td onClick={() => setCurrentSong(props, playlist, setActiveSong, dispatch)} className=\"text-center col-3 mx-auto\">\r\n                <span className=\"\">4:00</span>\r\n            </td>\r\n            <td className=\"setting col-3\">\r\n                <span className=\"float-right btn-group drop-left\">\r\n                    <i className=\"fa fa-ellipsis-h\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" />\r\n                    <div className=\"zing-chart-more dropdown-menu\">\r\n                        <i className=\"fa fa-arrow-down dropdown-item\" onClick={downloadSong}> Tải xuống</i>\r\n                        <i onClick={() => addSongToPlaylist(props, playlist, dispatch)} className=\"fa fa-plus dropdown-item\"> Thêm vào playlist</i>\r\n                    </div>\r\n                </span>\r\n            </td>\r\n        </tr>\r\n    );\r\n}\r\n\r\nexport default ItemZingchart;","import React from 'react';\r\nimport './zingchart.css'\r\nimport ItemZingchart from './ItemZingchart';\r\nimport { useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addNewPlaylist, setActiveSong } from '../../actions/playlist';\r\n\r\nZingchart.propTypes = {\r\n\r\n};\r\n\r\nfunction Zingchart(props) {\r\n\r\n    const [listZingchart, setListZingchart] = useState([]);\r\n    const dispatch = useDispatch();\r\n\r\n    //get list zing chart\r\n    useEffect(() => {\r\n        fetch('https://mp3.zing.vn/xhr/chart-realtime?songId=0&videoId=0&albumId=0&chart=song&time=-1')\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                const newList = [];\r\n                res.data.song.forEach(song => {\r\n                    const newSong = {\r\n                        encodeId: song.id,\r\n                        thumbnailM: song.thumbnail,\r\n                        title: song.title,\r\n                        artistsNames: song.artists_names,\r\n                        position: song.position,\r\n                        rankStatus: song.rank_status,\r\n                        rankNum: song.rank_num\r\n                    }\r\n                    newList.push(newSong);\r\n                })\r\n                setListZingchart(newList);\r\n            })\r\n        return () => {\r\n\r\n        }\r\n    }, [])\r\n\r\n    //set playlist, day len store, luu vao local storage\r\n    const setPlaylist = () => {\r\n        const actionAddNewPlaylist = addNewPlaylist(listZingchart);\r\n        localStorage.setItem('playlistMp3', JSON.stringify(listZingchart));\r\n\r\n        //set bai hat duoc phat, day len store, luu vao local storage\r\n        let activeId = Math.floor(Math.random(1) * 100);\r\n        const actionSetActiveSong = setActiveSong(listZingchart[activeId]);\r\n        localStorage.setItem('activeSongtMp3', JSON.stringify(listZingchart[activeId]));\r\n\r\n        dispatch(actionAddNewPlaylist);\r\n        dispatch(actionSetActiveSong);\r\n    }\r\n\r\n    return (\r\n        <div className=\"container page-zingchart\">\r\n            <h1 className=\"page-title\">#zingchart <i onClick={setPlaylist} className=\"fa fa-play-circle\"></i></h1>\r\n            <div className=\"row mt-5\">\r\n                <div className=\"list-song col-12\">\r\n                    <table className=\"table table-hover\">\r\n                        <tbody>\r\n                            {listZingchart.map(song => {\r\n                                return <ItemZingchart\r\n                                    key={song.encodeId}\r\n                                    encodeId={song.encodeId}\r\n                                    thumbnailM={song.thumbnailM}\r\n                                    title={song.title}\r\n                                    artistsNames={song.artistsNames}\r\n                                    position={song.position}\r\n                                    rankStatus={song.rankStatus}\r\n                                />\r\n                            })}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Zingchart;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setActiveSong } from '../../actions/playlist';\r\nimport { addSongToPlaylist, setCurrentSong } from '../../features/index.js';\r\n\r\nItemNewMusic.propTypes = {\r\n    title: PropTypes.string,\r\n    encodeId: PropTypes.string,\r\n    thumbnailM: PropTypes.string,\r\n    artistsNames: PropTypes.string,\r\n    position: PropTypes.number,\r\n    rankStatus: PropTypes.string\r\n};\r\n\r\nfunction ItemNewMusic(props) {\r\n\r\n    const dispatch = useDispatch();\r\n    const playlist = useSelector(state => state.playlist.list);\r\n    const isSignedIn = useSelector(state => state.user.isSignedIn);\r\n\r\n    const downloadSong = () => {\r\n        if(!isSignedIn)\r\n            alert(\"Đăng nhập để tải nhạc\");\r\n        else\r\n        alert(\"Không tải được đâu nghe online đê\");\r\n    }\r\n\r\n    return (\r\n        <tr className=\"row\">\r\n            <td onClick={() => setCurrentSong(props, playlist, setActiveSong, dispatch)} className=\"col-6 row song-item-new-music\">\r\n                <div className=\"song-thumbnail col-4\">\r\n                    <span className=\"song-number one\">{props.position}</span>\r\n                    <span className=\"sort\">-</span>\r\n                    <img className=\"mt-1\" src={props.thumbnailM} alt=\"\" />\r\n                </div>\r\n                <div className=\"song-info col-8 mb-2\">\r\n                    <span className=\"song-title\">{props.title}</span>\r\n                    <br />\r\n                    <span className=\"song-artist\">{props.artistsNames}</span>\r\n                </div>\r\n            </td>\r\n            <td onClick={() => setCurrentSong(props, playlist, setActiveSong, dispatch)} className=\"text-center col-3 mx-auto\">\r\n                <span className=\"\">4:00</span>\r\n            </td>\r\n            <td className=\"setting col-3\">\r\n                <span className=\"float-right btn-group drop-left\">\r\n                    <i className=\"fa fa-ellipsis-h\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" />\r\n                    <div className=\"dropdown-menu dropdown-menu-right\">\r\n                        <i className=\"fa fa-arrow-down dropdown-item\" onClick={downloadSong}> Tải xuống</i>\r\n                        <i onClick={() => addSongToPlaylist(props, playlist, dispatch)} className=\"fa fa-plus dropdown-item\"> Thêm vào playlist</i>\r\n                    </div>\r\n                </span>\r\n            </td>\r\n        </tr>\r\n    );\r\n}\r\n\r\nexport default ItemNewMusic;","import React from 'react';\r\nimport './newMusic.css';\r\nimport ItemNewMusic from './ItemNewMusic';\r\nimport { useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addNewPlaylist, setActiveSong } from '../../actions/playlist';\r\n\r\n\r\nNewMusic.propTypes = {\r\n    \r\n};\r\n\r\nfunction NewMusic(props) {\r\n\r\n    const [listNewMusic, setListNewMusic] = useState([]);\r\n    const dispatch = useDispatch();\r\n\r\n    //get list zing chart\r\n    useEffect(() => {\r\n        fetch('https://mp3-music-sever.herokuapp.com/api/listNewVpopMusic')\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                setListNewMusic(res.songs);\r\n            })\r\n        return () => {\r\n\r\n        }\r\n    }, [])\r\n\r\n    //set playlist, day len store, luu vao local storage\r\n    const setPlaylist = () => {\r\n        const actionAddNewPlaylist = addNewPlaylist(listNewMusic);\r\n        localStorage.setItem('playlistMp3', JSON.stringify(listNewMusic));\r\n\r\n        //set bai hat duoc phat, day len store, luu vao local storage\r\n        let activeId = Math.floor(Math.random(1) * listNewMusic.length);\r\n        const actionSetActiveSong = setActiveSong(listNewMusic[activeId]);\r\n        localStorage.setItem('activeSongtMp3', JSON.stringify(listNewMusic[activeId]));\r\n\r\n        dispatch(actionAddNewPlaylist);\r\n        dispatch(actionSetActiveSong);\r\n    }\r\n\r\n    return (\r\n        <div className=\"container page-new-music mt-5\">\r\n        <h1 className=\"page-title\">Mới Phát Hành <i onClick={setPlaylist} className=\"fa fa-play-circle\"></i></h1>\r\n        <div className=\"row mt-5\">\r\n            <div className=\"list-song col-12\">\r\n                <table className=\"table table-hover\">\r\n                    <tbody>\r\n                        {listNewMusic.map((song, index) => {\r\n                            return <ItemNewMusic\r\n                                key={song.encodeId}\r\n                                encodeId={song.encodeId}\r\n                                thumbnailM={song.thumbnailM}\r\n                                title={song.title}\r\n                                artistsNames={song.artistsNames}\r\n                                position={index + 1}\r\n                            />\r\n                        })}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default NewMusic;","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setActiveSong } from '../../actions/playlist';\r\nimport {addSongToPlaylist, setCurrentSong} from '../../features/index.js';\r\n\r\nSearchItem.propTypes = {\r\n\r\n};\r\n\r\nfunction SearchItem(props) {\r\n\r\n    const dispatch = useDispatch();\r\n    const playlist = useSelector(state => state.playlist.list); \r\n    const isSignedIn = useSelector(state => state.user.isSignedIn);\r\n\r\n    const downloadSong = () => {\r\n        if(!isSignedIn)\r\n            alert(\"Đăng nhập để tải nhạc\");\r\n        else\r\n        alert(\"Không tải được đâu nghe online đê\");\r\n    }\r\n\r\n    return (\r\n        <tr className=\"row\">\r\n            <td onClick={() => setCurrentSong(props, playlist, setActiveSong, dispatch)} className=\"col-6 row search-song-item\">\r\n                <div className=\"song-thumbnail col-2\">\r\n                    <img className=\"mt-1\" src={props.thumbnailM} alt=\"\" />\r\n                </div>\r\n                <div className=\"song-info col-8 mb-2\">\r\n                    <span className=\"song-title\">{props.title}</span>\r\n                    <br />\r\n                    <span className=\"song-artist\">{props.artistsNames}</span>\r\n                </div>\r\n            </td>\r\n            <td onClick={() => setCurrentSong(props, playlist, setActiveSong, dispatch)} className=\"text-center col-3 mx-auto\">\r\n                <span className=\"\">4:00</span>\r\n            </td>\r\n            <td className=\"setting col-3 pr-3\">\r\n                <span className=\"float-right btn-group\">\r\n                <i className=\"fa fa-ellipsis-h\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"/>\r\n                    <div className=\"dropdown-menu dropdown-menu-right\">\r\n                        <i className=\"fa fa-arrow-down dropdown-item\" onClick={downloadSong}>Tải xuông</i>\r\n                        <i onClick={() => addSongToPlaylist(props, playlist, dispatch)} className=\"fa fa-plus dropdown-item\"> Thêm vào playlist</i>\r\n                    </div>\r\n                </span>\r\n            </td>\r\n        </tr>\r\n    );\r\n}\r\n\r\nexport default SearchItem;","import React from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport SearchItem from './SearchItem';\r\nimport \"./search.css\";\r\n\r\nSearch.propTypes = {\r\n    \r\n};\r\n\r\nfunction Search(props) {\r\n\r\n    const {slug} = useParams();\r\n    const [listSearchSong, setListSearchSong] = useState([]);\r\n\r\n    useEffect(() => {\r\n        // get list search song\r\n        fetch(`http://ac.mp3.zing.vn/complete?type=artist,song,key,code&num=500&query=${slug}`)\r\n        .then((res) => {\r\n            return res.json();\r\n        })\r\n        .then((listSong) => {\r\n            setListSearchSong(listSong.data[0].song);\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        })\r\n    },[slug])\r\n\r\n    return (\r\n        <div className=\"search-page\">\r\n            <h1 className=\"page-title\">Kết Quả Tìm Kiếm <i className=\"fa fa-play-circle\"></i></h1>\r\n            <div className=\"row mt-5\">\r\n                <div className=\"list-search-song col-12\">\r\n                    <table className=\"table table-hover\">\r\n                        <tbody>\r\n                            {\r\n                                listSearchSong.map(song => {\r\n                                    return <SearchItem \r\n                                        key={song.id}\r\n                                        encodeId={song.id}\r\n                                        thumbnailM={`https://photo-resize-zmp3.zadn.vn/w94_r1x1_jpeg/${song.thumb}`}\r\n                                        title={song.name}\r\n                                        artistsNames={song.artist}\r\n                                    />\r\n                                })\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Search;","import React from 'react';\r\nimport firebase from 'firebase/compat/app';\r\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\r\nimport 'firebase/compat/auth';\r\n\r\nSignIn.propTypes = {\r\n    \r\n};\r\n// Configure FirebaseUI.\r\nconst uiConfig = {\r\n    // Popup signin flow rather than redirect flow.\r\n    signInFlow: 'redirect',\r\n    signInSuccessUrl: '/tai-khoan',\r\n    // We will display Google and Facebook as auth providers.\r\n    signInOptions: [\r\n      firebase.auth.GoogleAuthProvider.PROVIDER_ID,\r\n    //   firebase.auth.FacebookAuthProvider.PROVIDER_ID\r\n    ]\r\n  };\r\nfunction SignIn(props) {\r\n    return (\r\n        <div>\r\n            <h2 style={{textAlign:\"center\"}}>login form</h2>\r\n            <StyledFirebaseAuth uiConfig={uiConfig} firebaseAuth={firebase.auth()} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SignIn;","import React from 'react';\r\n// import { useEffect, useState, useLayoutEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useEffect, useState } from 'react';\r\nimport firebase from 'firebase/compat/app';\r\nimport 'firebase/compat/auth';\r\nimport './user.css';\r\nimport '../../style/detail.css';\r\nimport DetailMusicItem from '../detailMusicItem/DetailMusicItem';\r\n\r\nfunction User(props) {\r\n\r\n    const currentUser = useSelector(state => state.user.currentUser);\r\n    const [listMusic, setListMusic] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetch('https://mp3.zing.vn/xhr/chart-realtime?songId=0&videoId=0&albumId=0&chart=song&time=-1')\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                const newList = [];\r\n                res.data.song.forEach(song => {\r\n                    const newSong = {\r\n                        encodeId: song.id,\r\n                        thumbnailM: song.thumbnail,\r\n                        title: song.title,\r\n                        artistsNames: song.artists_names,\r\n                    }\r\n                    newList.push(newSong);\r\n                })\r\n                setListMusic(newList);\r\n            })\r\n        return () => {\r\n\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"user\">\r\n            <div className=\"sign-out float-right\">\r\n                <span className=\"float-right btn-group\">\r\n                    <i className=\"fa fa-ellipsis-h\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" />\r\n                    <div className=\"dropdown-menu dropdown-menu-right\">\r\n                        <a href=\"/discover\"><i className=\"fa fa-arrow-down dropdown-item btn-sign-out\" onClick={() => firebase.auth().signOut()}> Đăng xuất</i></a>\r\n                    </div>\r\n                </span>\r\n            </div>\r\n            <div className=\"user-info\">\r\n                <img src={currentUser.photoURL} alt=\"\" className=\"user-photo\" />\r\n                <p className=\"user-name\">{currentUser.displayName}</p>\r\n            </div>\r\n            <div className=\"user-musics container\">\r\n                <div className=\"row\">\r\n                    <div className=\"slide-thumbnail col-4\">\r\n                        <img src={currentUser.photoURL} className=\"user-photo\" alt=\"\" />\r\n                    </div>\r\n                    <div className=\"user-playlist col-8\" id=\"style-1\">\r\n                        <table className=\"table table-hover\">\r\n                            <tbody>\r\n                                {\r\n                                    listMusic.map((song, key) => {\r\n                                        return (\r\n                                            <DetailMusicItem\r\n                                                key={song.encodeId}\r\n                                                encodeId={song.encodeId}\r\n                                                thumbnailM={song.thumbnailM}\r\n                                                title={song.title}\r\n                                                artistsNames={song.artistsNames}\r\n                                            />)\r\n                                    })\r\n                                }\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default User;","import React from 'react';\r\nimport {\r\n    Switch,\r\n    Route,\r\n    Redirect\r\n  } from \"react-router-dom\";\r\nimport DetailListMusic from '../pages/detail/DetailListMusic';\r\nimport Discover from '../pages/discover/Discover';\r\nimport Zingchart from '../pages/zingchart/Zingchart';\r\nimport NewMusic from '../pages/newMusic/NewMusic';\r\nimport Search from '../pages/search/Search';\r\nimport SignIn from '../pages/sign-in/SignIn';\r\nimport User from '../pages/user/User';\r\n\r\nfunction NavigationUrl() {\r\n    return (\r\n        <Switch>\r\n            <Redirect exact from=\"/\" to=\"/discover\" />\r\n            <Route path=\"/discover\">\r\n                <Discover />\r\n            </Route>\r\n            <Route path=\"/zing-chart\">\r\n                <Zingchart />\r\n            </Route>\r\n            <Route path=\"/moi-phat-hanh\">\r\n                <NewMusic />\r\n            </Route>\r\n            <Route path=\"/tim-kiem/:slug\">\r\n                <Search />\r\n            </Route>\r\n            <Route path=\"/dang-nhap\">\r\n                <SignIn />\r\n            </Route>\r\n            <Route path=\"/tai-khoan\">\r\n                <User />\r\n            </Route>\r\n\r\n            <Route path=\"/pop-ballad-viet-noi-bat\">\r\n                <DetailListMusic />\r\n            </Route>\r\n            <Route path=\"/chill-cung-rap-viet\">\r\n                <DetailListMusic />\r\n            </Route>\r\n            <Route path=\"/v-pop-hits-quoc-dan\">\r\n                <DetailListMusic />\r\n            </Route>\r\n            <Route path=\"/guitar-v-pop\">\r\n                <DetailListMusic />\r\n            </Route>\r\n            <Route path=\"/rap-viet-ngay-nay\">\r\n                <DetailListMusic />\r\n            </Route>\r\n            <Route path=\"/combo-hits\">\r\n                <DetailListMusic />\r\n            </Route>\r\n            <Route path=\"/bedroom-pop\">\r\n                <DetailListMusic />\r\n            </Route>\r\n            <Route path=\"/edm-now\">\r\n                <DetailListMusic />\r\n            </Route>\r\n            <Route path=\"/top-100-nhac-v-pop-hay-nhat\">\r\n                <DetailListMusic />\r\n            </Route>\r\n            <Route path=\"/top-100-bai-hat-nhac-tre-hay-nhat\">\r\n                <DetailListMusic />\r\n            </Route>\r\n            <Route path=\"/top-100-pop-au-my-hay-nhat\">\r\n                <DetailListMusic />\r\n            </Route>\r\n            <Route path=\"/top-100-nhac-electronicdance-au-my-hay-nhat\">\r\n                <DetailListMusic />\r\n            </Route>\r\n            <Route path=\"/top-100-nhac-han-quoc-hay-nhat\">\r\n                <DetailListMusic />\r\n            </Route>\r\n            <Route path=\"/v-pop-thang-112021\">\r\n                <DetailListMusic />\r\n            </Route>\r\n            <Route path=\"/us-uk-thang-112021\">\r\n                <DetailListMusic />\r\n            </Route>\r\n            <Route path=\"/k-pop-thang-112021\">\r\n                <DetailListMusic />\r\n            </Route>\r\n            <Route path=\"/indie-viet-thang-112021\">\r\n                <DetailListMusic />\r\n            </Route>\r\n        </Switch>\r\n    );\r\n}\r\n\r\nexport default NavigationUrl;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setActiveSong } from '../../actions/playlist';\r\n\r\nPlaylistItem.propTypes = {\r\n    title: PropTypes.string,\r\n    encodeId: PropTypes.string,\r\n    thumbnailM: PropTypes.string,\r\n    artistsNames: PropTypes.string\r\n};\r\nPlaylistItem.defaultProp = {\r\n    title: '',\r\n    encodeId: '',\r\n    thumbnailM: '',\r\n    artistsNames: ''\r\n};\r\n\r\nfunction PlaylistItem(props) {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    //set bai hat duoc phat, day len store, luu vao local storage\r\n    const setCurrentSong = () => {\r\n        let currentSong = {\r\n            title: props.title,\r\n            encodeId: props.encodeId,\r\n            thumbnailM: props.thumbnailM,\r\n            artistsNames: props.artistsNames\r\n        }\r\n\r\n        const actionSetActiveSong = setActiveSong(currentSong);\r\n        localStorage.setItem('activeSongtMp3', JSON.stringify(currentSong));\r\n        dispatch(actionSetActiveSong);\r\n    }\r\n\r\n    return (\r\n        <tr>\r\n            <td className=\"row playlist-item\">\r\n                <div onClick={setCurrentSong} className=\"song-thumbnail col-3\">\r\n                    <i className=\"fa fa-music mt-3 mr-1\" />\r\n                    <img className=\"mt-1\" src={props.thumbnailM} alt=\"\" />\r\n                </div>\r\n                <div onClick={setCurrentSong} className=\"song-info col-7 ml-1 mb-2\">\r\n                    <span className=\"song-title\">{props.title}</span>\r\n                    <br />\r\n                    <span className=\"song-artist\">{props.artistsNames}</span>\r\n                </div>\r\n                <div className=\"col-1 setting mr-1 ml-1\">\r\n                    <i className=\"fa fa-ellipsis-h text-left\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" />\r\n                    <div className=\"dropdown-menu dropdown-menu-right row\">\r\n                        <i onClick={() => props.handleRemoveSong(props.encodeId)} className=\"fa fa-trash dropdown-item\"> Xóa</i>\r\n                    </div>\r\n                </div>\r\n            </td>\r\n        </tr>\r\n    );\r\n}\r\n\r\nexport default PlaylistItem;","import React from 'react';\r\nimport \"./playlist.css\";\r\nimport { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport PlaylistItem from './PlaylistItem';\r\nimport { addNewPlaylist, setActiveSong } from '../../actions/playlist';\r\n\r\nPlaylist.propTypes = {\r\n\r\n};\r\n\r\nfunction Playlist(props) {\r\n\r\n    const playlistStatus = useSelector(state => state.playlist.status);//get trang thai cua playlist\r\n    const listSong = useSelector(state => state.playlist.list);//get playlist tu store\r\n    const [list, setList] = useState([]);\r\n    const activeSong = useSelector(state => state.playlist.activeSong);\r\n    const dispatch = useDispatch();\r\n\r\n    const showClass = (playlistStatus) ? \"col-3 playlist-right show-playlist\" : \"col-3 playlist-right\";\r\n\r\n    //set playlist\r\n    useEffect(() => {\r\n        setList(listSong);\r\n    }, [listSong])\r\n    \r\n    //delete bai hat khoi playlist\r\n    const handleRemoveSongFromPlaylist = (removeId) => {\r\n        const newList = list.filter((song) => {\r\n            return song.encodeId !== removeId;\r\n        })\r\n        const removeIndex = list.findIndex((song) => {\r\n            return song.encodeId === removeId;\r\n        })\r\n\r\n        if(removeId === activeSong.encodeId){\r\n            if(removeIndex === list.length - 1){\r\n                const actionSetActiveSong = setActiveSong(newList[0]);\r\n                localStorage.setItem('activeSongtMp3',JSON.stringify(newList[0]));\r\n                dispatch(actionSetActiveSong); \r\n            }\r\n            else{\r\n                const actionSetActiveSong = setActiveSong(newList[removeIndex]);\r\n                localStorage.setItem('activeSongtMp3',JSON.stringify(newList[removeIndex]));\r\n                dispatch(actionSetActiveSong); \r\n            }\r\n        }\r\n\r\n        const removeSongFromPlaylist = addNewPlaylist(newList);\r\n        localStorage.setItem('playlistMp3',JSON.stringify(newList));\r\n        dispatch(removeSongFromPlaylist); \r\n    }\r\n\r\n    return (\r\n        <div className={showClass} id=\"style-1\">\r\n            <table className=\"table table-hover\">\r\n                <thead>\r\n                    <tr className=\"text-center\">\r\n                        <th className=\"col-6\">DANH SÁCH PHÁT</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {list.map(song => {\r\n                        return (\r\n                            <PlaylistItem \r\n                                key={song.encodeId}\r\n                                encodeId={song.encodeId}\r\n                                thumbnailM={song.thumbnailM}\r\n                                title={song.title}\r\n                                artistsNames={song.artistsNames}\r\n                                handleRemoveSong={handleRemoveSongFromPlaylist}\r\n                            />\r\n                        )\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Playlist;","import '../style/App.css';\nimport Header from '../common/header/Header';\nimport Navbar from '../common/navbar/Navbar.jsx';\nimport Player from '../common/player/Player';\nimport { BrowserRouter } from \"react-router-dom\";\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport NavigationUrl from '../routes/NavigationUrl';\nimport Playlist from '../common/playlist/Playlist';\n\nimport firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\nimport { signedIn } from '../actions/user';\n\n// Configure Firebase.\nconst config = {\n  apiKey: process.env.REACT_APP_FIREBASE_API,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN\n};\nfirebase.initializeApp(config);\n\nfunction App() {\n\n  const dispatch = useDispatch();\n  // const [isSignedIn, setIsSignedIn] = useState(false); // Local signed-in state.\n  // Listen to the Firebase Auth state and set the local state.\n  useEffect(() => {\n    const unregisterAuthObserver = firebase.auth().onAuthStateChanged(async (user) => {\n      if(!user){\n        console.log(\"user logout\");\n        return;\n      }\n      else{\n        console.log(\"user login\");\n        const currentUser = await user;\n        const actionSignIn = signedIn(currentUser);\n        dispatch(actionSignIn);\n      }\n    });\n    return () => unregisterAuthObserver(); // Make sure we un-register Firebase observers when the component unmounts.\n  }, []);\n\n  return (\n    <BrowserRouter>\n      <div className=\"app container-fluid\">\n        <div className=\"row\">\n          <Navbar />\n          <Header />\n          <div className=\"col-2\" style={{zIndex: -1}}></div>\n          <div className=\"col-10 content col-mid\">\n            <NavigationUrl />\n          </div>\n          <Playlist />\n          <Player />\n        </div>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","export const signedIn = (signedInInfor) => {\r\n    return {\r\n        type: 'LOG_IN',\r\n        playload: signedInInfor\r\n    }\r\n}\r\nexport const signedOut = (signedOutInfor) => {\r\n    return {\r\n        type: 'LOG_OUT',\r\n        playload: signedOutInfor\r\n    }\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\r\nconst playlistInitialState = {\r\n    status: false,\r\n    list: JSON.parse(localStorage.getItem('playlistMp3')) || [],\r\n    // activeSong: JSON.parse(localStorage.getItem('activeSongtMp3')) || null\r\n    activeSong:  {\r\n        \"encodeId\": \"ZU6IEI66\",\r\n        \"key\": \"\",\r\n        \"title\": \"Yêu Là Cưới\",\r\n        \"artistsNames\": \"Phát Hồ, X2X\",\r\n        \"thumbnailM\": \"https://photo-resize-zmp3.zadn.vn/w240_r1x1_jpeg/cover/4/9/d/a/49da6a1d6cf13a42e77bc3a945d9dd6b.jpg\",\r\n        \"path\": \"\"\r\n    }\r\n};\r\n\r\nconst playlistReducer = (state = playlistInitialState, action) => {\r\n    switch (action.type) {\r\n        case \"SHOW_PLAYLIST\":\r\n            return {\r\n                ...state,\r\n                status: action.playload\r\n            }\r\n        case \"ADD_NEW_PLAYLIST\":\r\n            return {\r\n                ...state,\r\n                list: action.playload\r\n            }\r\n        case \"SET_ACTIVE_SONG\":\r\n            return {\r\n                ...state,\r\n                activeSong: action.playload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default playlistReducer;","const userInitialState = {\r\n    isSignedIn: false,\r\n    currentUser: {}\r\n}\r\n\r\nconst userReducer = (state = userInitialState, action) => {\r\n    switch (action.type) {\r\n        case \"LOG_IN\":\r\n            return {\r\n                isSignedIn: true,\r\n                currentUser: action.playload\r\n            }\r\n        case \"LOG_OUT\":\r\n            return action.playload\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default userReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport playlistReducer from \"./playlist\";\r\nimport userReducer from \"./user\";\r\n\r\nconst rootReducer = combineReducers({\r\n    playlist: playlistReducer,\r\n    user: userReducer\r\n})\r\n\r\nexport default rootReducer;","import { createStore } from \"redux\";\r\nimport rootReducer from \"../reducers\";\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style/index.css';\nimport App from './app/App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './app/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}